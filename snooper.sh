#!/bin/bash

snooper(){
cat<<"EOF"
⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⡿⠛⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠛⠻⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣷⣤⣤⣶⣿⣿⣿⣿⣿⠛⠻⢿⣿⣿⣿⣿⣷⡤⠀⢀⣁⣠⣄⡉⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠀⠈⠻⣿⣿⣿⠏⢠⣶⡿⠟⠛⠛⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣶⣶⣾⣿⣿⠇⢰⣿⡏⢠⣤⡦⠀⡀⠙⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⠀⢸⣿⡇⠘⢻⠀⡀⡅⠀⣸⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡈⢻⣷⣄⠘⠘⠁⢀⣴⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠙⠻⢷⣶⣾⠿⠋⢰⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣦⡄⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠀⠀
EOF

}
display_help(){
	figlet snooper
	snooper
	echo --------------------------------------
	echo "System for passive data and metadata acquisition from multimedia files"
	echo --------------------------------------
	echo "Created by:"
	echo "Tomasz Skrond & Weronika Ryl"
	echo --------------------------------------
    	echo "Options:"
	echo "  -e, --extract-metadata  Extract metadata from given file"
    	echo "  -g, --geotag            Display geotag information"
    	echo "  -a, --all               Display all available information"
	echo "  -c, --clear             Clear all (global) analysis files and their folders"
    	echo "  -h, --help              Display this help and exit"
	echo "-------------------------------------"
	echo "Additional info:"
	echo "All global metadata (extracted using -e option) is saved in ~/.snooper directory with names of origin file and numeric value with date format %m%d%y%H%M%S (13 digits)"
	echo "-------------------------------------"
}

#sets path for output directory and file name when writing results to file is necessary
set_output_dir(){
    FILENAME=$1
    FILETYPE=$(file --brief $1 | sed -E 's/ /_/g' | awk -F, '{print $1}')

    if [ -z "$FILETYPE" ]; then
        FILETYPE="unknown"
    fi

    DIRNAME=$2
    if [ -z "$2" ]; then
	DIRNAME=$HOME/.snooper
    fi

    OUTPUT_DIR=$DIRNAME/$FILETYPE
    if [ ! -d "$OUTPUT_DIR" ]; then
        mkdir -p "$OUTPUT_DIR"
    fi

    FILENAME=$(basename $1)_$(date +"%m%d%y%H%M%S")
}

split_directory(){
    WORKDIR=$(realpath $1)
    
    if [ ! -d "$WORKDIR" ]; then
        echo "Directory does not exist - exiting!"
	exit 1
    fi
    
    cd $WORKDIR

    CURRENT_DATE=$(date +"%m%d%y%H%M%S")
    SPLIT_DIRNAME=$WORKDIR/split_${CURRENT_DATE}
    SPLIT_DIRNAME_DIR=$(basename $SPLIT_DIRNAME)
     
    if [ "$(find "${WORKDIR}" -type d -print | grep -cE 'split_([0-9]{12})')" -gt 0 ]; then
	echo "Found potential analysis folders generated by Snooper"
        read -p "Do you want to remove previous analysis files?(y/N)" user_input
	user_input="${user_input,,}"
	if [[ "$user_input" == "y" ]]; then
	    rm -rf split_*/
	fi
    fi

    mkdir -p $SPLIT_DIRNAME

    ALL_FILES=($(find "${WORKDIR}" -type f -print))

    for f in ${ALL_FILES[@]}; do
	if [ "$(realpath $f | grep -cE 'split_([0-9]{12})')" -gt 0 ]; then
	    echo "skipping (analysis files), $(realpath $f)"
	    continue
	fi
	FILETYPE=$(file --brief $f | sed -E 's/ /_/g' | awk -F, '{print $1}')
        if [ -z "$FILETYPE" ]; then
            FILETYPE="unknown"
        fi
	
	mkdir -p ${SPLIT_DIRNAME}/${FILETYPE}
	echo analysing $(realpath $f)
	exiftool $f > ${SPLIT_DIRNAME}/${FILETYPE}/$(basename ${f})_analysis

    done
}

# extracts all exif metadata of a file and saves it to a file
extract_metadata() {
    BASE_FILENAME=$(basename $1)
    set_output_dir $1
    echo $OUTPUT_DIR/$FILENAME
    exiftool "$1" > $OUTPUT_DIR/$FILENAME
}

# Function to display geotag information
display_geotag() {
    #set_output_dir $1
    exiftool -gps:all "$1"
}

# Function to display all available information
display_all_info() {
    #set_output_dir $1
    exiftool -All "$1"
}

remove_cache() {
    echo "Cleaning up analysis files"
    rm -rf $HOME/.snooper/*
}

# Main script
if [ $# -lt 1 ]; then
    display_help
    exit 1
fi

while [ $# -gt 0 ]; do
    case "$1" in
        -e|--extract-metadata)
            extract_metadata "$2"
            ;;
        -g|--geotag)
            display_geotag "$2"
            ;;
        -a|--all)
            display_all_info "$2"
            ;;
	-c|--clear)
	    remove_cache
	    ;;
	-s|--split-directory)
	    split_directory "$2"
	    ;;
        -h|--help)
            display_help
            exit 0
            ;;
	--)
	    break
	    ;;
        *)
            exit 1
            ;;
    esac
    shift
done
